name: BrightSec Full Scan

on:
  push:
    branches:
      - main

jobs:
  brightsec-full-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run a Bright Discovery
        id: run_discovery
        uses: NeuraLegion/run-discovery@v1.1
        with:
          api_token: ${{ secrets.BRIGHTSEC_TOKEN }}
          project_id: ${{ vars.PROJECT_ID }}
          hostname: ${{ vars.HOSTNAME }}
          auth_object_id: ${{ vars.AUTH_ID }}
          discovery_types: '[ "crawler" ]'
          crawler_urls: '[ "https://brokencrystals.com" ]'
          name: GitHub discovery ${{ github.sha }}
          # restart_discovery_id: # optional
          # file_id: # optional
          # repeaters: # optional
          # smart: # optional
          # exclude_entry_points: # optional
          # hosts_filter: # optional
          # crawl_parent_subdomains: # optional
          # concurrency: # optional
          # interactions_depth: # optional
          
      - name: Get the output discovery url
        id: extract_id
        run: |
            url="${{ steps.run_discovery.outputs.url }}"
            id="${url##*/}"
            echo "Discovery ID is: $id"
            echo "discovery_id=$id" >> $GITHUB_OUTPUT

      # - name: Wait for Bright discovery
        # id: wait_discovery
        # uses: NeuraLegion/wait-for-discovery@v1
        # with:
          # api_token: ${{ secrets.BRIGHTSEC_TOKEN }}
          # discovery_id: ${{ steps.extract_id.outputs.discovery_id }}
          # project_id: ${{ vars.PROJECT_ID }}
          # timeout:
          # hostname: ${{ vars.HOSTNAME }}
  
      - name: List Project Entrypoints
        id: entrypoints
        uses: NeuraLegion/list-entrypoints@v1
        with:
          api_token: ${{ secrets.BRIGHTSEC_TOKEN  }}
          project_id: ${{ vars.PROJECT_ID }}
          hostname: https://eu.brightsec.com/ 
          limit: 50
          connectivity: ok,unreachable
          status: new,vulnerable
    
     # - name: Use Entrypoints
       # run: |
         # echo "Project ID: ${{ steps.entrypoints.outputs.projectId }}"
         # echo "Entrypoints: ${{ steps.entrypoints.outputs.entrypoints }}"
         
      - name: Run a Bright Security Scan
        id: run_scan
        uses: NeuraLegion/run-scan@v1.3
        with:
          name: GitHub scan ${{ github.sha }}
          api_token: ${{ secrets.BRIGHTSEC_TOKEN }}
          hostname: ${{ vars.HOSTNAME }}
          project_id: ${{ vars.PROJECT_ID }}
          entrypoints: |
            [ 4Kzm71PH7VdmxA444dumyT, mrrLMzNhybswh7YJif9AUq, 8J5QMjWvccw1L9Xa2MCpmg]
          # auth_object_id: ${{ vars.AUTH_ID }}
          # discovery_types: |
            # [ "crawler" ]
          # crawler_urls: |
            # [ "https://brokencrystals.com" ]
          # exclude_params: |
            # [ "?<excluded_file_ext>(\/\/[^?#]+\.)((?<image>jpg|jpeg|png|gif|svg|eps|webp|tif|tiff|bmp|psd|ai|raw|cr|pcx|tga|ico)|(?<video>mp4|avi|3gp|flv|h264|m4v|mkv|mov|mpg|mpeg|vob|wmv)|(?<audio>wav|mp3|ogg|wma|mid|midi|aif)|(?<document>doc|docx|odt|pdf|rtf|ods|xls|xlsx|odp|ppt|pptx)|(?<font>ttf|otf|fnt|fon))(?:$|#|\?))", "logout|signout" ]
          # restart_scan: # optional
          # tests: |
            # [ "sqli", "xss", "rce" ]
          # file_id: # optional
          # repeaters: # optional
          # exclude_entry_points: # optional
          # module: # optional (dast, fuzzer)
          # hosts_filter: # optional
          
          
      # - name: Stop Bright Security Scan
      #   uses: NeuraLegion/stop-scan@v1 
