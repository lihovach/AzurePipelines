name: BrightSec Full Scan

on:
  push:
    branches:
      - main

env:
  BRIGHTSEC_TOKEN: ${{ secrets.BRIGHTSEC_TOKEN }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  HOSTNAME: ${{ secrets.HOSTNAME }} # e.g. eu.brightsec.com
  AUTH_ID: ${{ secrets.AUTH_ID }}

jobs:
  brightsec-full-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run a Bright Discovery
        id: run_discovery
        uses: NeuraLegion/run-discovery@v1.1
        with:
          api_token: ${{ env.BRIGHTSEC_TOKEN }}
          project_id: ${{ env.PROJECT_ID }}
          hostname: ${{ env.HOSTNAME }}
          auth_object_id: ${{ env.AUTH_ID }}
          crawler_urls: |
            [ "https://brokencrystals.com" ]
          discovery_types: |
            [ "crawler" ]
          # restart_discovery_id: # optional
          # file_id: # optional
          # repeaters: # optional
          # smart: # optional
          # exclude_entry_points: # optional
          # hosts_filter: # optional
          # name: # optional
          # crawl_parent_subdomains: # optional
          # concurrency: # optional
          # interactions_depth: # optional
      - name: Wait for Bright discovery
        id: wait_discovery
        uses: NeuraLegion/wait-for-discovery@v1
        with:
          api_token: ${{ env.BRIGHTSEC_TOKEN }}
          discovery_id: ${{ steps.run_discovery.outputs.discovery_id }}
          project_id: ${{ env.PROJECT_ID }}
          hostname: ${{ env.HOSTNAME }}
      - name: List Bright project entrypoints
        id: list_entrypoints
        uses: NeuraLegion/list-entrypoints@v1.1
        with:
          api_token: ${{ env.BRIGHTSEC_TOKEN }}
          hostname: ${{ env.HOSTNAME }}
          project_id: ${{ env.PROJECT_ID }}
          # limit: # optional
          # connectivity: # optional
          # status: # optional
          # ids_only: # optional
      - name: Run a Bright Security Scan
        id: run_scan
        uses: NeuraLegion/run-scan@v1.2
        with:
          api_token: ${{ env.BRIGHTSEC_TOKEN }}
          hostname: ${{ env.HOSTNAME }}
          project_id: ${{ env.PROJECT_ID }}
          auth_object_id: ${{ env.AUTH_ID }}
          discovery_types: |
            [ "crawler" ]
          crawler_urls: |
            [ "https://brokencrystals.com" ]
          tests: | 
            [ "client_side", "business_logic", "cve", "server_side" ]
          exclude_params: |
            [ "?<excluded_file_ext>(\/\/[^?#]+\.)((?<image>jpg|jpeg|png|gif|svg|eps|webp|tif|tiff|bmp|psd|ai|raw|cr|pcx|tga|ico)|(?<video>mp4|avi|3gp|flv|h264|m4v|mkv|mov|mpg|mpeg|vob|wmv)|(?<audio>wav|mp3|ogg|wma|mid|midi|aif)|(?<document>doc|docx|odt|pdf|rtf|ods|xls|xlsx|odp|ppt|pptx)|(?<font>ttf|otf|fnt|fon))(?:$|#|\?))", "logout|signout" ]
          # restart_scan: # optional
          # file_id: # optional
          # repeaters: # optional
          # exclude_entry_points: # optional
          # module: # optional (dast, fuzzer)
          # hosts_filter: # optional
          # name: # optional
          # entrypoints: # optional

      # 5. (Optional) Stop Scan action placeholder
      # - name: Stop Bright Security Scan
      #   uses: NeuraLegion/stop-scan@v1 
