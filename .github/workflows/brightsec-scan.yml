name: Bright Security Scan Workflow

on:
  workflow_dispatch:
    inputs:
      discovery_id:
        description: 'Discovery ID to restart (optional)'
        required: false
      scan_id:
        description: 'Scan ID to restart (optional)'
        required: false

env:
  BRIGHT_API_TOKEN: ${{ secrets.BRIGHT_API_TOKEN }}
  BRIGHT_PROJECT_ID: ${{ secrets.BRIGHT_PROJECT_ID }}
  BRIGHT_HOSTNAME: 'app.brightsec.com' # optional, can override in secrets

jobs:
  bright-security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run a Bright Discovery
        uses: NeuraLegion/run-discovery@v1.1
        with:
          api_token: ${{ env.BRIGHT_API_TOKEN }}
          project_id: ${{ env.BRIGHT_PROJECT_ID }}
          hostname: ${{ env.BRIGHT_HOSTNAME }}
          restart_discovery_id: ${{ github.event.inputs.discovery_id }}
          # Uncomment and configure any optional parameters as needed:
          # file_id: 
          # auth_object_id: 
          # repeaters: 
          # discovery_types: 
          # crawler_urls: 
          # smart: 
          # exclude_entry_points: 
          # hosts_filter: 
          # name: 
          # crawl_parent_subdomains: 
          # concurrency: 
          # interactions_depth: 

      - name: Wait for Bright discovery
        uses: NeuraLegion/wait-for-discovery@v1
        with:
          api_token: ${{ env.BRIGHT_API_TOKEN }}
          project_id: ${{ env.BRIGHT_PROJECT_ID }}
          discovery_id: ${{ steps.run-discovery.outputs.discovery_id }}
          hostname: ${{ env.BRIGHT_HOSTNAME }}
          # timeout: 600 # optional

      - name: Run a Bright Security Scan
        uses: NeuraLegion/run-scan@v1.1
        with:
          api_token: ${{ env.BRIGHT_API_TOKEN }}
          project_id: ${{ env.BRIGHT_PROJECT_ID }}
          hostname: ${{ env.BRIGHT_HOSTNAME }}
          restart_scan: ${{ github.event.inputs.scan_id }}
          # Uncomment and configure any optional parameters as needed:
          # file_id: 
          # discovery_types: 
          # crawler_urls: 
          # exclude_params: 
          # exclude_entry_points: 
          # module: 
          # hosts_filter: 
          # name: 
          # tests: 
          # entrypoints: 
